{"version":3,"sources":["components/ContactForm/contactForm.module.css","components/Filter/filter.module.css","components/ContactList/contactList.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.js"],"names":["module","exports","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","contactsSelectors","getAllContacts","dispatch","useDispatch","className","style","formWrapper","onSubmit","e","preventDefault","some","contact","toast","contactsOperations","addContact","label","input","type","value","onChange","target","btn","configure","Filter","getFilter","filter","contactsActions","changeFilter","ContactList","getFilteredContacts","contactList","map","id","onClick","deleteContact","onDeleteContact","ContactsPage","isLoadingContacts","getLoading"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,aAAe,kCAAkC,UAAY,+BAA+B,MAAQ,2BAA2B,IAAM,yBAAyB,MAAQ,6B,oBCAvOD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,oBCA1DD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,KAAO,0BAA0B,IAAM,2B,8HCSzF,SAASC,IAAe,IAAD,EACZC,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,OAMRF,mBAAS,IAND,mBAM7BG,EAN6B,KAMrBC,EANqB,KAW9BC,EAAWC,YAAYC,IAAkBC,gBACzCC,EAAWC,cAyBjB,OACE,qBAAKC,UAAWC,IAAMC,YAAtB,SACE,uBAAMC,SAzBY,SAAAC,GACpBA,EAAEC,iBAEGf,EAKAE,EAKDE,EAASY,MAAK,SAAAC,GAAO,OAAIA,EAAQjB,OAASA,KAC5CkB,YAAM,GAAD,OAAIlB,EAAJ,8BAIPQ,EAASW,IAAmBC,WAAW,CAAEpB,OAAME,YAC/CD,EAAQ,IACRE,EAAU,KAXRe,YAAM,gBALNA,YAAM,eAqBN,UACE,wBAAOR,UAAWC,IAAMU,MAAxB,iBAEE,uBACEX,UAAWC,IAAMW,MACjBC,KAAK,OACLvB,KAAK,OACLwB,MAAOxB,EACPyB,SA7CS,SAAAX,GACjBb,EAAQa,EAAEY,OAAOF,aA+Cb,wBAAOd,UAAWC,IAAMU,MAAxB,mBAEE,uBACEX,UAAWC,IAAMW,MACjBC,KAAK,MACLvB,KAAK,SACLwB,MAAOtB,EACPuB,SAlDW,SAAAX,GACnBX,EAAUW,EAAEY,OAAOF,aAoDf,wBAAQd,UAAWC,IAAMgB,IAAKJ,KAAK,SAAnC,8BA9DRL,IAAMU,Y,sBCmBSC,MArBf,WACE,IAAM7B,EAAOK,YAAYC,IAAkBwB,WACrCtB,EAAWC,cAEjB,OACE,wBAAOC,UAAWC,IAAMoB,OAAxB,mCAEE,uBACErB,UAAWC,IAAMW,MACjBC,KAAK,OACLC,MAAOxB,EACPyB,SARW,SAAAX,GAAC,OAAIN,EAASwB,IAAgBC,aAAanB,EAAEY,OAAOF,e,kBCmCxDU,MAtCf,WAEE,IAAM9B,EAAWC,YAAYC,IAAkB6B,qBAGzC3B,EAAWC,cAGjB,OACE,oBAAIC,UAAWC,IAAMyB,YAArB,SACGhC,EAASiC,KAAI,gBAAGC,EAAH,EAAGA,GAAItC,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,qBAAaQ,UAAWC,IAAMyB,YAA9B,UACGpC,EADH,KACWE,EACT,wBACEqB,KAAK,SACLb,UAAWC,IAAMgB,IACjBY,QAAS,YAVK,SAAAD,GAAM9B,EAASW,IAAmBqB,cAAcF,IAW5DG,CAAgBH,IAJpB,sBAFOA,SCYFI,UAlBM,WACnB,IAAMC,EAAoBtC,YAAYC,IAAkBsC,YAExD,OACE,gCACE,0CAEA,cAAC,EAAD,IAEA,cAAC,EAAD,IAECD,GAAqB,cAAC,IAAD,IAEtB,cAAC,EAAD","file":"static/js/contacts-page.c50ed5e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"contactForm_formWrapper__1SZdU\",\"registerForm\":\"contactForm_registerForm__dWWe7\",\"loginForm\":\"contactForm_loginForm__5m0NV\",\"label\":\"contactForm_label__1MRdK\",\"btn\":\"contactForm_btn__1HImM\",\"input\":\"contactForm_input__3RQlJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__2je3F\",\"input\":\"filter_input__maQLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contactList_contactList__2DaKd\",\"item\":\"contactList_item__3GPge\",\"btn\":\"contactList_btn__2pkKA\"};","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport style from './contactForm.module.css';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\n//toast\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const changeName = e => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const [number, setNumber] = useState('');\r\n  const changeNumber = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const contacts = useSelector(contactsSelectors.getAllContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const submitContact = e => {\r\n    e.preventDefault();\r\n\r\n    if (!name) {\r\n      toast(`Enter name`);\r\n      return;\r\n    }\r\n\r\n    if (!number) {\r\n      toast(`Enter number`);\r\n      return;\r\n    }\r\n\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      toast(`${name} is already in contacts.`);\r\n\r\n      return;\r\n    }\r\n    dispatch(contactsOperations.addContact({ name, number }));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div className={style.formWrapper}>\r\n      <form onSubmit={submitContact}>\r\n        <label className={style.label}>\r\n          Name\r\n          <input\r\n            className={style.input}\r\n            type=\"name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={changeName}\r\n          />\r\n        </label>\r\n        <label className={style.label}>\r\n          Number\r\n          <input\r\n            className={style.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={changeNumber}\r\n          />\r\n        </label>\r\n        <button className={style.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import style from './filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\r\n\r\nfunction Filter() {\r\n  const name = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(contactsActions.changeFilter(e.target.value));\r\n  return (\r\n    <label className={style.filter}>\r\n      Find contacts by name:\r\n      <input\r\n        className={style.input}\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import style from './contactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\n\r\nfunction ContactList() {\r\n  // useSelector\r\n  const contacts = useSelector(contactsSelectors.getFilteredContacts);\r\n\r\n  // useDispatch\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\r\n\r\n  return (\r\n    <ul className={style.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={style.contactList}>\r\n          {name}: {number}\r\n          <button\r\n            type=\"button\"\r\n            className={style.btn}\r\n            onClick={() => {\r\n              onDeleteContact(id);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\n\r\nimport Spin from '../components/Spinner';\r\nimport { contactsSelectors } from '../redux/contacts';\r\n//hook\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport ContactsForm from '../components/ContactForm';\r\nimport Filter from '../components/Filter';\r\nimport ContactList from '../components/ContactList';\r\n\r\nconst ContactsPage = () => {\r\n  const isLoadingContacts = useSelector(contactsSelectors.getLoading);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Contacts</h2>\r\n\r\n      <ContactsForm />\r\n\r\n      <Filter />\r\n\r\n      {isLoadingContacts && <Spin />}\r\n\r\n      <ContactList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;\r\n"],"sourceRoot":""}